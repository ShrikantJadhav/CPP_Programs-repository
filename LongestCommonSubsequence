#include<iostream>

void longestCommonSequence(const char * s1, const char *s2){
        const int m = strlen(s1);
        const int n = strlen(s2);

        int L[m+1][n+1];

                for(int i = 0; i  < m+1; i++){
                std::cout<<"\n";
                for(int j = 0; j < n+1; j++){
                        L[i][j] = 0;
                }
        }

                for(int i = m; i >=0; i--){
                        for(int j = n ; j >= 0; j--){
                        if(s1[i] == '\0' || s2[j] == '\0') L[i][j] = 0;
                        else
                        {
                                if(s1[i] == s2[j]){
                                        L[i][j] = 1 + L[i+1][j+1];
                                }
                                else
                                {
                                        L[i][j] = std::max(L[i][j+1],L[i+1][j]);
                                }
                        }
                }
        }

        int i = 0 ;
        int j = 0;
        while( i < m && j < n){
                if(s1[i] == s2[j]){
                        std::cout<<s1[i];
                        i++;j++;
                }
                else
                {
                        if(L[i+1][j] > L[i][j+1]){
                                i++;
                        }
                        else{
                                j++;
                        }
                }
        }
}


int main(){
        char *str1 = "ABAD";
        char *str2 = "BACD";
        longestCommonSequence(const_cast<char*> (str1) , const_cast<char*> (str2));
}
